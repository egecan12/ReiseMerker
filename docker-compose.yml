services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: location-notebook-backend
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - CLOUDINARY_URL=${CLOUDINARY_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL:-http://localhost:3000/api/auth/google/callback}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:80}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - location-notebook-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: location-notebook-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://localhost:3000}
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - location-notebook-network

networks:
  location-notebook-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local